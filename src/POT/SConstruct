## -*- python -*-
## feff85exafs build system based on scons
## see HEADERS/license.h for license information

import sys
sys.path.append('..')
from FeffBuild import CompilationEnvironment, InstallEnvironment, FindOtherObjects
from   os.path   import realpath, join

try:
    Import('env')
except:
    env  = CompilationEnvironment()
ienv = InstallEnvironment()

lib_src = Split('istprm.f movrlp.f ovp2mt.f fermi.f sidx.f')

bin_src = Split('ffmod1.f pot.f    scmtmp.f afolp.f broydn.f corval.f coulom.f ff2g.f frnrm.f  \
                 grids.f  inipot.f istval.f moveh.f ovrlp.f  reapot.f rholie.f \
                 scmt.f   sumax.f  wpot.f   wrpot.f')

deps = ('COMMON/wlog', 'COMMON/str', 'COMMON/chopen', 'COMMON/padlib', 'COMMON/xx',
        'PAR/sequential', 'MATH/terp', 'MATH/polint', 'MATH/somm2', 'MATH/dist', 'MATH/lu',
        'EXCH/edp', 'EXCH/vbh')

env.Library('libfeffint', lib_src) # + FindOtherObjects(deps, env))

libs = ['libfeffint.a',
        join('..', 'json-fortran', 'libjsonfortran.a'),
        join('..', 'ATOM',   'libfeffatom.a'),
        join('..', 'FOVRG',  'libfeffpha.a'),
        join('..', 'COMMON', 'libfeffcom.a'),
        join('..', 'PAR',    'libfeffpar.a'),
        join('..', 'MATH',   'libfeffmath.a'),
        join('..', 'JSON',   'libfeffjson.a'),
        join('..', 'EXCH',   'libfeffexch.a'),
        join('..', 'FMS',    'libfefffms.a'),
       ]

env.Program('pot', bin_src + libs)

env.Depends('reapot'+env['SHOBJSUFFIX'], join('..', 'json-fortran', 'libjsonfortran.a'))

env.Install(ienv['i_bin'], 'pot'+env['PROGSUFFIX'])

env.Alias('install', [ienv['i_bin'],])
